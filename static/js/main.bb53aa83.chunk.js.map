{"version":3,"sources":["component/Search.js","component/AddTransaction.js","component/TransactionList.js","App.js","index.js"],"names":["DropDown","toggle","sortBy","orderBy","onOrderBy","onSort","className","role","onClick","Search","searchTransactions","query","onSortBy","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","onOrder","myOder","mySort","AddTransaction","onSendTransaction","lastID","clearData","amount","date","description","formData","setFormData","toggleForm","setToggleForm","rows","transactionData","TransactionList","transaction","deleteTransaction","App","Transactions","setTransaction","setQuery","setSortBy","setOrderBy","filterTransactions","filter","item","toLowerCase","includes","sort","a","b","console","log","Number","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","newData","reduce","max","myQuery","map","transactionID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb53aa83.chunk.js","sourcesContent":["import { BiSearch , BiCaretDown, BiCheck, BiUpArrowCircle, BiDownArrowCircle } from \"react-icons/bi\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nconst DropDown  = ({toggle,orderBy,onOrderBy,sortBy,onSort}) =>{\r\n\r\n  \r\nif(!toggle){\r\nreturn null;\r\n}\r\n \r\n  return(\r\n    \r\n    <div className=\"origin-top-right absolute right-0 mt-2 w-56\r\n      rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n      <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n        <div   onClick = {()=>{ onSort('Amount')}}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n          role=\"menuitem\">Amount { (sortBy=== 'Amount') && <BiCheck />}</div>\r\n        <div onClick = { () => { onSort('Type')}}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n          role=\"menuitem\">Type  { (sortBy=== 'Type') && <BiCheck />}</div>\r\n        <div onClick = { () => { onSort('Date')}}\r\n          className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n          role=\"menuitem\">Date { (sortBy=== 'Date') && <BiCheck />}</div>\r\n    \r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst Search = ({searchTransactions,query,orderBy,onOrderBy,sortBy,onSortBy}) =>{\r\n \r\n  let[toggleSort,setToggleSort] = useState(false);\r\n    return(\r\n          <div className=\"py-5\">\r\n      <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n        <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n          <BiSearch />\r\n          <label htmlFor=\"query\" className=\"sr-only\" />\r\n        </div>\r\n        <input type=\"text\" name=\"query\" id=\"query\" value = {query} \r\n        onChange = {(event) =>{ searchTransactions(event.target.value)}}\r\n        className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-1000 sm:text-sm border-gray-300\" placeholder=\"Search\" />\r\n      \r\n        <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n          <span className =\" flex space-x-3  p-12\">\r\n           <button><BiUpArrowCircle className = {`mr-145 h-18 w-18 rounded-2xl ${ orderBy === 'dsc' ?'bg-blue-400':''}`} onClick={()=>{onOrderBy('dsc')}}/></button>\r\n           <button> <BiDownArrowCircle className = {`mr-145 h-18 w-18 rounded-2xl ${ orderBy === 'asc' ?'bg-blue-400':''}`} onClick={()=>{onOrderBy('asc')}}/></button>\r\n          </span>\r\n          <div>\r\n            <button type=\"button\" onClick = {()=>{setToggleSort(!toggleSort)}}\r\n              className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center  rounded-md\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n              Sort By <BiCaretDown className=\"ml-2\" />\r\n            </button>\r\n            <DropDown \r\n             toggle={toggleSort}\r\n             orderBy ={orderBy}\r\n             onOrder = {myOder => { onOrderBy(myOder)}}\r\n             sortBy ={sortBy}\r\n             onSort = {mySort => { onSortBy(mySort)}}\r\n            \r\n            />\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Search;","\r\nimport { AiFillCreditCard } from \"react-icons/ai\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddTransaction = ({onSendTransaction, lastID}) => {\r\n\r\n  const clearData ={\r\n    type: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n    description: \"\"\r\n  }\r\n  let[formData,setFormData]= useState (clearData);\r\n\r\n  let[toggleForm,setToggleForm] = useState(false);\r\n\r\n\r\n   function formDataPublish(){\r\n     const transactionData ={\r\n    id: lastID +1,\r\n    type: formData.type,\r\n    amount: formData.amount,\r\n    date: formData.date,\r\n    description: formData.description\r\n     }\r\n     onSendTransaction(transactionData);\r\n    setToggleForm(!toggleForm);\r\n    setFormData(clearData);\r\n    }\r\n  \r\nreturn(\r\n     <div>\r\n      <button onClick={()=>{setToggleForm(!toggleForm)}}\r\n            className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-t-md\r\n            ${toggleForm ? 'rounded-t-md' : 'rounded-md' }`\r\n            }>\r\n        <div><AiFillCreditCard className=\"inline-block align-text-top\" />  Add Transaction</div>\r\n      </button>\r\n     {\r\n     toggleForm &&\r\n\r\n      <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n          <label htmlFor=\"transactionType\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n           Transaction Type\r\n          </label>\r\n          <div className=\"flex space-x-2 items-center\">\r\n            <input type=\"radio\" name=\"transactionType\" id=\"transactionType\"\r\n             onChange = {(event)=>{setFormData({...formData, type : event.target.value})}}\r\n             value= \"Creadited\"\r\n              className=\"\" /> <span className=\"\">Creadit</span>\r\n              <input type=\"radio\" name=\"transactionType\" id=\"transactionType\" \r\n              onChange = {(event)=>{setFormData({...formData, type : event.target.value})}}\r\n               value= \"Debited\"\r\n              className=\"\" /> <span className=\"\">Debit</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n          <label htmlFor=\"transactionAmount\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n          Transaction Amount\r\n          </label>\r\n          <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n            <input type=\"text\" name=\"transactionAmount\" id=\"transactionAmount\" \r\n            onChange = {(event)=>{setFormData({...formData, amount : event.target.value})}}\r\n             value= {formData.amount}\r\n              className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n          <label htmlFor=\"transactionDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n            Transaction Date\r\n          </label>\r\n          <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n            <input type=\"date\" name=\"transactionDate\" id=\"transactionDate\" \r\n            onChange = {(event)=>{setFormData({...formData, date : event.target.value})}}\r\n             value= {formData.date}\r\n              className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n          <label htmlFor=\"transactionNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n           Transaction description\r\n          </label>\r\n          <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n            <textarea id=\"transactionNotes\" name=\"transactionNotes\" rows=\"3\" \r\n            onChange = {(event)=>{setFormData({...formData, description : event.target.value})}}\r\n             value= {formData.description}\r\n              className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Detailed comments about the Transaction\"></textarea>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"pt-5\">\r\n          <div className=\"flex justify-end\">\r\n            <button type=\"submit\" onClick = {formDataPublish}\r\n            className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n     \r\n     } \r\n    </div>\r\n)\r\n}\r\nexport default AddTransaction","import { BsFillCalendarDateFill } from \"react-icons/bs\";\r\nimport { BiTrash  } from \"react-icons/bi\"\r\nconst TransactionList = ({transaction , deleteTransaction}) =>{\r\n    return(\r\n          <li className=\"px-3 py-3 flex items-start\">\r\n  <button type=\"button\" onClick= {() => deleteTransaction(transaction.id)}\r\n    className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n    <BiTrash /></button>\r\n  <div className=\"flex-grow\">\r\n    <div className=\"flex items-center \">\r\n      <span className=\"flex-none font-medium text-2xl text-blue-500\">{transaction.type}</span>\r\n      <span className=\"flex-grow text-right\"><span ><BsFillCalendarDateFill className= \"float-right \"/></span>{transaction.date}</span>\r\n    </div>\r\n    <div className=\"font-bold text-blue-500\">Amount: <span className =\"text-black\"> {transaction.amount} </span></div>\r\n    <div className=\"leading-tight\">{transaction.description}</div>\r\n  </div>\r\n</li>\r\n    )\r\n}\r\nexport default TransactionList;","import { useState,useEffect,useCallback } from \"react\";\r\nimport { AiFillCreditCard } from \"react-icons/ai\"\r\nimport Search  from \"./component/Search\";\r\nimport AddTransaction from \"./component/AddTransaction\";\r\n\r\nimport TransactionList from \"./component/TransactionList\";\r\n\r\nfunction App() {\r\n\r\n  let[Transactions,setTransaction] =  useState ([]);\r\n  let[query,setQuery] = useState(\"\");\r\n  let[sortBy,setSortBy] = useState(\"amount\");\r\n  let[orderBy,setOrderBy] = useState(\"asc\");\r\n  const filterTransactions = Transactions.filter(\r\n\r\n    item =>{\r\n      return(\r\n        item.amount.toLowerCase().includes(query.toLowerCase()) ||\r\n        item.type.toLowerCase().includes(query.toLowerCase()) ||\r\n        item.date.toLowerCase().includes(query.toLowerCase()) \r\n      )\r\n    }\r\n  ).sort((a,b)=>{\r\n    console.log(\"A\"+ Number( a[sortBy]))\r\n    console.log(\"B\"+ Number( b[sortBy]))\r\n    console.log(a[sortBy] < b[sortBy])\r\n     let order = (orderBy === 'asc') ? 1 : -1;\r\n      if(sortBy.toLowerCase() === 'amount' || sortBy.toLowerCase() === 'date'){\r\n        return(\r\n          Number( a[sortBy]) <  Number( b[sortBy])\r\n       ? -1*order : 1*order\r\n        )\r\n      } else{\r\n    return(\r\n     \r\n     a[sortBy]?.toLowerCase() < b[sortBy]?.toLowerCase()\r\n       ? -1*order : 1*order\r\n    )\r\n      }\r\n  })\r\n    \r\n \r\n\r\n  const fetchData = useCallback( () => {\r\n   fetch ('./data.json')\r\n   .then(response => response.json())\r\n   .then(data => {\r\n     setTransaction(data)\r\n    })\r\n  },[])\r\n\r\n  useEffect(() => {\r\n   fetchData()\r\n  }, [fetchData])\r\n  return (\r\n   <div className =\"App container mx-auto mt-3 font-thin\">\r\n     <h1 className =\"text-5xl mb-4\"> \r\n     <AiFillCreditCard className = \"inline-block text-blue-400 align-top\"/> My Credits and Debits</h1>\r\n     <AddTransaction \r\n     onSendTransaction ={newData => setTransaction ([...Transactions,newData])}\r\n     lastID ={Transactions.reduce((max,item) => Number(item.id) > max ? Number(item.id):max , 0)}    \r\n     />\r\n     <Search  \r\n     query ={query}\r\n     searchTransactions = { myQuery => {setQuery(myQuery)} }\r\n     sortBy = {sortBy}\r\n     onSortBy = {mySort => {setSortBy(mySort)} }\r\n     orderBy = {orderBy}\r\n     onOrderBy ={ myOder => {setOrderBy(myOder)} }\r\n     />\r\n     <ul className = \"divide-y divide-blue-300\">\r\n      {filterTransactions\r\n         \r\n       .map(transaction =>(\r\n        \r\n      <TransactionList key ={transaction.id}\r\n      transaction ={transaction}\r\n      deleteTransaction = {\r\n\r\n        transactionID =>{\r\n          setTransaction(Transactions.filter(transaction =>  transactionID !== transaction.id))\r\n        }\r\n      }\r\n      />\r\n\r\n       ))\r\n\r\n      }\r\n     </ul>\r\n     </div>\r\n     \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <App />, document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}